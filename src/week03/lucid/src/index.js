import 'bootstrap';
import 'bootstrap/dist/css/bootstrap.min.css';
import './bootstrap-datetimepicker.min.css';
import * as L from 'lucid-cardano';

const vestingScript = {
    type: "PlutusV2",
    script: "591ca301000022232498c8c8cccc00401492600300253300148901230013263357389201144e616d654572726f723a2076616c696461746f7200498c8c8c8894ccd5cd19b8f002488101230011003133004002001222232498c8c94ccd5cd1919999299800a441012200132633573892011b4e616d654572726f723a20646561646c696e655f7265616368656400498004c94cc0052201010f0013263357389201104e616d654572726f723a20646174756d00498004c94cc005220101050013263357389201124e616d654572726f723a20636f6e746578740049800400400440044c98cd5ce1924914646561646c696e65206e6f74207265616368656400001498c94ccd5cd1919999299800a441011d0013263357389201204e616d654572726f723a207369676e65645f62795f62656e656669636961727900498004c94cc0052201010f0013263357389201104e616d654572726f723a20646174756d00498004c94cc005220101050013263357389201124e616d654572726f723a20636f6e746578740049800400400440044c98cd5ce192491f62656e65666963696172792773207369676e6174757265206d697373696e6700001498004ccc888894ccd5cd19b8f00248810105001100315333573466e3c00922010124001100415333573466e3c0092201010f00110051330060020010040030023232225333573466e3c0092201012200110031330040020012223233332533001489011e0013263357389201134e616d654572726f723a2069735f616674657200498004c8c8dd6999918008009112999ab9a35746002264c66ae712410a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40046aae78dd500099299800a4501090013263357389201114e616d654572726f723a20706172616d7300498004004c8c8ccc8c0040048894ccd5cd1aba3001132633573892010a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a401c6aae78dd50009919199918008009112999ab9a35746002264c66ae712410a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40006aae78dd500099299800a4501050013263357389201124e616d654572726f723a20636f6e7465787400498004004004004c8004cc88894ccd5cd19b8f0024890105001100315333573466e3c0092201010900110041330050020010030023232225333573466e3c009221011e0011003133004002001222323333253300148901190013263357389201134e616d654572726f723a20636f6e7461696e7300498004c94cc005220101210013263357389201184e616d654572726f723a2066726f6d5f696e74657276616c00498004c94cc005220101200013263357389201164e616d654572726f723a2076616c69645f72616e676500498004004c8c8c8894ccd5cd19b8f00248810121001100313300400200132333325330014881011a0013263357389201144e616d654572726f723a206d616b655f66726f6d00498004c94cc0052201011f0013263357389201134e616d654572726f723a20646561646c696e6500498004c8cc94cc005221010a0013263357389201134e616d654572726f723a20547275654461746100498004004004004004004cc88894ccd5cd19b8f00248810120001100315333573466e3c0092201011f00110041330050020010030023232225333573466e3c009221011d00110031330040020012223233223371e00466464600200244a666ae68d5d1800899b8b4800001454ccd5cd18019aba10011357420022660040046ae88004dc780100099191bae33323001001222533357346ae8c0044c98cd5ce2490a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40006aae78dd500099299800a4501090013263357389201114e616d654572726f723a20706172616d7300498004004c8c8cc8c8c004004894ccd5cd1aba300114bd62099aba0300335742002660040046ae880048dd70009bac33323001001222533357346ae8c0044c98cd5ce2490a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40206aae78dd50009919199918008009112999ab9a35746002264c66ae712410a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40006aae78dd500099299800a4501050013263357389201124e616d654572726f723a20636f6e7465787400498004004004c8004cc88894ccd5cd19b8f00248810105001100315333573466e3c0092201010900110041330050020010030023232225333573466e3c009221011a0011003133004002001222323333253300148901140013263357389201194e616d654572726f723a20504f53495854696d6552616e676500498004c8cccc94cc005221011300132633573892011e4e616d654572726f723a204c6f776572426f756e64504f53495854696d6500498004c8ccc94cc0052201011000132633573892011a4e616d654572726f723a2046696e697465504f53495854696d6500498004c94cc0052201011b0013263357389201164e616d654572726f723a206c6f7765725f626f756e6400498004004004c94cc0052201011c0013263357389201174e616d654572726f723a206c6f7765725f636c6f73656400498004004004c8cccc94cc005221011200132633573892011e4e616d654572726f723a205570706572426f756e64504f53495854696d6500498004c8cc94cc005221011100132633573892011a4e616d654572726f723a20506f73496e66504f53495854696d6500498004004004c8cc94cc005221010a0013263357389201134e616d654572726f723a20547275654461746100498004004004004004004c8004cc88894ccd5cd19b8f002489011c001100315333573466e3c0092201011b00110041330050020010030023232225333573466e3c00922101190011003133004002001222325333573464a666ae68c8cdc399299800a441010d0013263357389201104e616d654572726f723a206c6f77657200498004c9200200100114a226466e1cc94cc0052201010d0013263357389201104e616d654572726f723a206c6f77657200498004c92000001001001132533357346466e1cc94cc005221010e0013263357389201104e616d654572726f723a20757070657200498004c9200000100114a226466e1cc94cc0052201010e0013263357389201104e616d654572726f723a20757070657200498004c8cdc0a40006490010008008008008a50323232225333573466e3c009221010e001100313300400200132333325330014881011700132633573892011e4e616d654572726f723a20636f6d706172655f75707065725f626f756e6400498004c8c8ccc8c0040048894ccd5cd1aba300113263357389210a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40046aae78dd500099299800a45010200132633573892010c4e616d654572726f723a206100498004004c8c8ccc8c0040048894ccd5cd1aba3001132633573892010a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40046aae78dd500099299800a45010100132633573892010c4e616d654572726f723a206200498004004004004c8c8894ccd5cd19b8f0024881010d001100313300400200132333325330014881011800132633573892011e4e616d654572726f723a20636f6d706172655f6c6f7765725f626f756e6400498004c8c8ccc8c0040048894ccd5cd1aba300113263357389210a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40006aae78dd500099299800a45010200132633573892010c4e616d654572726f723a206100498004004c8c8ccc8c0040048894ccd5cd1aba3001132633573892010a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40006aae78dd500099299800a45010100132633573892010c4e616d654572726f723a206200498004004004004004cc88894ccd5cd19b8f0024890101001100315333573466e3c0092201010200110041330050020010030023232225333573466e3c0092210118001100313300400200122232533001488101000013263357389201114e616d654572726f723a20726573756c7400498c8c94ccd5cd1919b873253300148901000013263357389201114e616d654572726f723a20726573756c7400498004c920000010011323232225333573466e3c009221010000110031330040020013233332533001488101060013263357389201124e616d654572726f723a20636f6d7061726500498004c94cc005220101040013263357389201104e616d654572726f723a20625f76616c00498004c94cc005220101030013263357389201104e616d654572726f723a20615f76616c00498004004004c8c8894ccd5cd19b8f002489010400110031330040020013253335734646664a6600291101070013263357389201134e616d654572726f723a206765745f626f6f6c00498004c8c8ccc8c0040048894ccd5cd1aba300113263357389210a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40046aae78dd500099299800a45010100132633573892010c4e616d654572726f723a2062004980040040040044c9200200113248000004004c8c8894ccd5cd19b8f0024881010300110031330040020013253335734646664a6600291101070013263357389201134e616d654572726f723a206765745f626f6f6c00498004c8c8ccc8c0040048894ccd5cd1aba300113263357389210a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40046aae78dd500099299800a45010200132633573892010c4e616d654572726f723a2061004980040040040044c92002001132480000040040040044c8004004c8c8894ccd5cd19b8f0024890100001100313300400200132333325330014881010c00132633573892011b4e616d654572726f723a20636f6d706172655f657874656e64656400498004c8c8ccc8c0040048894ccd5cd1aba300113263357389210a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40006aae78dd500099299800a45010200132633573892010c4e616d654572726f723a206100498004004c8c8ccc8c0040048894ccd5cd1aba3001132633573892010a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40006aae78dd500099299800a45010100132633573892010c4e616d654572726f723a206200498004004004004004cc88894ccd5cd19b8f0024890101001100315333573466e3c0092201010200110041330050020010030023232225333573466e3c0092210117001100313300400200122232533001488101000013263357389201114e616d654572726f723a20726573756c7400498c8c94ccd5cd1919b873253300148901000013263357389201114e616d654572726f723a20726573756c7400498004c920000010011323232225333573466e3c009221010000110031330040020013233332533001488101060013263357389201124e616d654572726f723a20636f6d7061726500498004c94cc005220101030013263357389201104e616d654572726f723a20615f76616c00498004c94cc005220101040013263357389201104e616d654572726f723a20625f76616c00498004004004c8c8894ccd5cd19b8f002489010400110031330040020013253335734646664a6600291101070013263357389201134e616d654572726f723a206765745f626f6f6c00498004c8c8ccc8c0040048894ccd5cd1aba300113263357389210a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40046aae78dd500099299800a45010100132633573892010c4e616d654572726f723a2062004980040040040044c9200200113248000004004c8c8894ccd5cd19b8f0024881010300110031330040020013253335734646664a6600291101070013263357389201134e616d654572726f723a206765745f626f6f6c00498004c8c8ccc8c0040048894ccd5cd1aba300113263357389210a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40046aae78dd500099299800a45010200132633573892010c4e616d654572726f723a2061004980040040040044c92002001132480000040040040044c8004004c8c8894ccd5cd19b8f0024890100001100313300400200132333325330014881010c00132633573892011b4e616d654572726f723a20636f6d706172655f657874656e64656400498004c8c8ccc8c0040048894ccd5cd1aba300113263357389210a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40006aae78dd500099299800a45010200132633573892010c4e616d654572726f723a206100498004004c8c8ccc8c0040048894ccd5cd1aba3001132633573892010a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40006aae78dd500099299800a45010100132633573892010c4e616d654572726f723a206200498004004004004004cc88894ccd5cd19b8f0024890101001100315333573466e3c0092201010200110041330050020010030023232225333573466e3c00922101070011003133004002001223253300148901000013263357389201114e616d654572726f723a20726573756c7400498c8c94ccd5cd1919b87323235573a6ea8004c94cc0052201010100132633573892010c4e616d654572726f723a206200498004004c920000010011323232225333573466e3c009220101000011003133004002001324a2002002002264646444a666ae68cdc780124501000011003133004002001324a00020020020026444a666ae68cdc7801245010100110031330040020010023232225333573466e3c0092201010c001100313300400200122232533001488101000013263357389201114e616d654572726f723a20726573756c7400498c8c94ccd5cd192999ab9a323370e64a6600291101030013263357389201104e616d654572726f723a20615f76616c00498004c920000010011323370e64a66002910101040013263357389201104e616d654572726f723a20625f76616c00498004c9200000100114a0002264646444a666ae68cdc7801245010000110031330040020013233332533001488101060013263357389201124e616d654572726f723a20636f6d7061726500498004c8c8dd6999918008009112999ab9a35746002264c66ae712410a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40006aae78dd500099299800a4501150013263357389201134e616d654572726f723a20615f66696e69746500498004004c8c8dd6999918008009112999ab9a35746002264c66ae7124010a496e6465784572726f720049854ccd5cd19b87002480004d5d0800899980180199b8100248008d5d1000a40006aae78dd500099299800a4501160013263357389201134e616d654572726f723a20625f66696e69746500498004004004004c8c8894ccd5cd19b8f00248810116001100313300400200132533001489010100132633573892010c4e616d654572726f723a206200498004c8c8894ccd5cd19b8f0024890115001100313300400200132533001489010200132633573892010c4e616d654572726f723a2061004980040040044c8c8c8894ccd5cd19b8f0024881010000110031330040020013233332533001488101060013263357389201124e616d654572726f723a20636f6d7061726500498004c94cc005220101030013263357389201104e616d654572726f723a20615f76616c00498004c94cc005220101040013263357389201104e616d654572726f723a20625f76616c00498004004004004004c8c8894ccd5cd19b8f00248901040011003133004002001323332533001489010b0013263357389201224e616d654572726f723a20636f6d706172655f657874656e6465645f68656c70657200498004c94cc0052201010100132633573892010c4e616d654572726f723a206200498004004004c8c8894ccd5cd19b8f00248901030011003133004002001323332533001489010b0013263357389201224e616d654572726f723a20636f6d706172655f657874656e6465645f68656c70657200498004c94cc0052201010200132633573892010c4e616d654572726f723a206100498004004004004cc88894ccd5cd19b8f00248810101001100315333573466e3c0092201010200110041330050020010030023232225333573466e3c009221010b0011003133004002001223253300148901000013263357389201114e616d654572726f723a20726573756c7400498c8c94ccd5cd1919b87323235573a6ea8004c94cc0052201010800132633573892010f4e616d654572726f723a2074696d6500498004004c920000010011323232225333573466e3c00922010100001100313300400200132337029000192400400200200200226464a666ae68c8cdc399191aab9d375400264a66002911010800132633573892010f4e616d654572726f723a2074696d6500498004004c920020010011323232225333573466e3c00922010100001100313300400200132480000040040044c8c94ccd5cd1919b87323235573a6ea8004c94cc005221010800132633573892010f4e616d654572726f723a2074696d6500498004004c920040010011323232225333573466e3c00922010100001100313300400200132480080040040044c8004004004004004004c8c8894ccd5cd19b8f002489010000110031330040020013248000004004c8894ccd5cd19b8f002489010800110031330040020010023232225333573466e3c00922010106001100313300400200122232533001488101000013263357389201114e616d654572726f723a20726573756c7400498c8c94ccd5cd1919b8832533001489010200132633573892010c4e616d654572726f723a206100498004c94cc0052201010100132633573892010c4e616d654572726f723a2062004980040044c8c8c8894ccd5cd19b8f0024890100001100313300400200132480080040040044c8c94ccd5cd1919b87325330014881010200132633573892010c4e616d654572726f723a206100498004c94cc0052201010100132633573892010c4e616d654572726f723a2062004980040044c8c8c8894ccd5cd19b8f0024890100001100313300400200132480000040040044c8c8c8894ccd5cd19b8f00248901000011003133004002001323370290001924004002002002002002002002664444a666ae68cdc78012450101001100315333573466e3c0092201010200110041330050020010030023232225333573466e3c009221011400110031330040020012223374a900019aba00033357400046ec5263232225333573466e3c009221011300110031330040020012223374a900019aba00033357400046ec5263232225333573466e3c009221011200110031330040020012223374a900019aba00033357400046ec5263232225333573466e3c0092210111001100313300400200123374a90021bb1498c8c8894ccd5cd19b8f00248901100011003133004002001223374a900119aba037500046ec5263232225333573466e3c009221010a001100313300400200123374a90001bb149800488005",
};

const VestingDatum = L.Data.Object({
    beneficiary: L.Data.String,
    deadline: L.Data.BigInt,
});

function removeChildren(elt) {
    while (elt.firstChild) {
        elt.removeChild(elt.lastChild);
    }
}

async function loadCardano() {
    const nami = window.cardano.nami;
    if (!nami) {
        setTimeout(loadCardano);
    } else {
        const api = await nami.enable();
        console.log('nami enabled');
        const lucid = await L.Lucid.new(
            new L.Blockfrost("https://cardano-preview.blockfrost.io/api/v0", "previewXlMAOoSw1hb2mBlm1xzt5xXd9HLuxuGh"),
            // new L.Kupmios("http://localhost:1442", "ws://localhost:1337"),
            "Preview",
        );
        console.log('lucid active');
        lucid.selectWallet(api);
        return lucid;
    }
}

async function submitCardanoTx(signedTx) {
    const tid = await signedTx.submit();
    console.log("Cardano tx submitted: " + tid);
    addLinkToTable("cardanoTxTable", "https://preview.cardanoscan.io/transaction/" + tid, tid);
}

async function signAndSubmitCardanoTx(tx) {
    try {
        const signedTx = await tx.sign().complete();
        await submitCardanoTx(signedTx);
    } catch (err) {
        alert(`Cardano transaction:\ninfo: ${err.info}\nmessage: ${err.message}`);
        throw (err);
    }
}

async function getCardanoPKH() {
    const addr = await lucid.wallet.address();
    const details = await L.getAddressDetails(addr);
    return details.paymentCredential.hash;
}

async function getStatus() {
    const pkh = await getCardanoPKH();
    const utxos = await lucid.wallet.getUtxos();
    const lovelace = utxos.reduce((acc, utxo) => acc + utxo.assets.lovelace, 0n);

    const vestings = await vestingUTxOs();

    return {
        cardanoPKH: pkh,
        cardanoBalance: lovelace,
        vestingUTxOs: vestings,
    };
}

function addCell(tr, content) {
    const td = document.createElement('td');
    tr.appendChild(td);
    td.appendChild(document.createTextNode(content));
}

function addLinkToTable(tableId, href, text) {
    const txTable = document.getElementById('cardanoTxTable');
    const tr = document.createElement('tr');
    txTable.appendChild(tr);
    const td = document.createElement('td');
    tr.appendChild(td);
    const a = document.createElement('a');
    td.appendChild(a);
    a.setAttribute('href', href);
    a.setAttribute('target', '_blank');
    a.appendChild(document.createTextNode(text));
}

function addCopyCell(row, text) {
    const td = document.createElement("td");
    row.appendChild(td);
    const span = document.createElement("span");
    td.appendChild(span);
    const uid = String(Math.random()).slice(2);
    span.setAttribute("id", uid);
    span.appendChild(document.createTextNode(text));
    const button = document.createElement("button");
    td.appendChild(button);
    button.setAttribute("type", "button");
    button.classList.add("btn");
    button.classList.add("btn-outline-primary");
    button.classList.add("btn-sm");
    button.addEventListener("click", () => onCopy(uid));
}

async function setStatus() {
    const status = await getStatus();

    const cardanoPKH = document.getElementById('cardanoPKH');
    removeChildren(cardanoPKH);
    cardanoPKH.appendChild(document.createTextNode(status.cardanoPKH));

    const cardanoBalance = document.getElementById('cardanoBalance');
    const ada = Number(status.cardanoBalance) / 1000000;
    removeChildren(cardanoBalance);
    cardanoBalance.appendChild(document.createTextNode(ada));

    const vestingUTxOsTable = document.getElementById('vestingUTxOsTable');
    removeChildren(vestingUTxOsTable);
    for (const x of status.vestingUTxOs) {
        const tr = document.createElement('tr');
        vestingUTxOsTable.appendChild(tr);

        addCopyCell(tr, x.utxo.txHash + '#' + x.utxo.outputIndex);
        addCopyCell(tr, x.datum.beneficiary);
        addCell(tr, x.utxo.assets.lovelace);
        addCell(tr, new Date(Number(x.datum.deadline)));
    }
}

async function vestingUTxOs() {
    const utxos = await lucid.utxosAt(vestingAddress);
    const res = [];
    for (const utxo of utxos) {
        const datum = utxo.datum;
        if (datum) {
            try {
                const d = L.Data.from(datum, VestingDatum);
                res.push({
                    utxo: utxo,
                    datum: d
                });
            } catch (err) {
            }
        }
    }
    return res;
}

async function findUTxO(ref) {
    const chunks = ref.split('#');
    const tid = chunks[0];
    const ix = parseInt(chunks[1]);
    const utxos = await vestingUTxOs();
    for (const utxo of utxos) {
        if (utxo.utxo.txHash == tid && utxo.utxo.outputIndex == ix) {
            return utxo;
        }
    }
    return null;
}

async function onVest() {
    const beneficiaryText = document.getElementById('vestBeneficiaryText');
    const beneficiary = beneficiaryText.value;
    const amountText = document.getElementById('vestAmountText');
    const amount = BigInt(parseInt(vestAmountText.value));
    const deadlineText = document.getElementById('vestDeadlineText');
    const deadline = BigInt(Date.parse(deadlineText.value));

    const d = {
        beneficiary: beneficiary,
        deadline: deadline,
    };
    const datum = L.Data.to(d, VestingDatum);
    const tx = await lucid
        .newTx()
        .payToContract(vestingAddress, { inline: datum }, { lovelace: amount })
        .complete();
    signAndSubmitCardanoTx(tx);

    beneficiaryText.value = "";
    amountText.value = "";
    deadlineText.value = "";
}

async function onClaim() {
    const pkh = await getCardanoPKH();

    const referenceText = document.getElementById('claimReferenceText');
    const reference = referenceText.value;

    const utxo = await findUTxO(reference);
    if (utxo) {
        const tx = await lucid
            .newTx()
            .collectFrom([utxo.utxo], L.Data.to(new L.Constr(0, [])))
            .attachSpendingValidator(vestingScript)
            .addSignerKey(pkh)
            .validFrom(Number(utxo.datum.deadline))
            .complete();
        signAndSubmitCardanoTx(tx);
    } else {
        console.log("UTxO not found");
    }

    referenceText.value = "";
}

function onCopy(elt) {
    navigator.clipboard.writeText(document.getElementById(elt).firstChild.textContent);
}

window.L = L;
window.lucid = await loadCardano();
const vestingAddress = lucid.utils.validatorToAddress(vestingScript);

$(function () {
    $(".dtp").datetimepicker({
        minuteStep: 1,
        autoclose: true,
        format: 'yyyy-mm-dd hh:ii'
    });
});

setStatus();
setInterval(setStatus, 5000);

document.getElementById("vestButton").addEventListener("click", onVest);
document.getElementById("claimButton").addEventListener("click", onClaim);
document.getElementById('cardanoPKHButton').addEventListener("click", () => onCopy("cardanoPKH"));
